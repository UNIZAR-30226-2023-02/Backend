# Generated by Django 4.1.7 on 2023-03-18 12:21

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("trivial_api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(default="ad", max_length=50, unique=True),
                ),
                (
                    "correo",
                    models.EmailField(
                        default="example@gmail.com", max_length=254, unique=True
                    ),
                ),
                ("fecha_nac", models.DateField(default="1997-10-19")),
                ("password", models.CharField(default="", max_length=200)),
                ("monedas", models.IntegerField(default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "Usuario",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Fichas_tableros",
            fields=[
                ("id_objeto", models.AutoField(primary_key=True, serialize=False)),
                ("coste", models.IntegerField(default=5)),
                ("link_imagen", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[("T", "Tablero"), ("F", "Ficha")], max_length=7
                    ),
                ),
            ],
            options={
                "db_table": "Fichas_tableros",
            },
        ),
        migrations.CreateModel(
            name="Partida",
            fields=[
                ("id_partida", models.AutoField(primary_key=True, serialize=False)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("C", "Clasico"),
                            ("E", "Equipo"),
                            ("D", "Desafio"),
                            ("T", "Tematico"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "db_table": "Partida",
            },
        ),
        migrations.CreateModel(
            name="Tematica",
            fields=[
                (
                    "tema",
                    models.CharField(
                        default="NO_ESPECIFICADO",
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "Tematica",
            },
        ),
        migrations.CreateModel(
            name="Sala",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre_sala", models.CharField(max_length=50)),
                ("n_jugadores", models.IntegerField(default=0)),
                ("password_sala", models.CharField(max_length=50)),
                (
                    "tipo_partida",
                    models.CharField(
                        choices=[
                            ("C", "Clasico"),
                            ("E", "Equipo"),
                            ("D", "Desafio"),
                            ("T", "Tematico"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "tipo_sala",
                    models.CharField(
                        choices=[("Pub", "Publico"), ("Priv", "Privado")], max_length=10
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sala_username",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Sala",
            },
        ),
        migrations.CreateModel(
            name="Pregunta",
            fields=[
                (
                    "enunciado",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("r_bien", models.CharField(blank=True, max_length=200)),
                ("r_mal1", models.CharField(blank=True, max_length=200)),
                ("r_mal2", models.CharField(blank=True, max_length=200)),
                ("r_mal3", models.CharField(blank=True, max_length=200)),
                (
                    "tema",
                    models.ForeignKey(
                        default="NO_ESPECIFICADO",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trivial_api.tematica",
                    ),
                ),
            ],
            options={
                "db_table": "Pregunta",
            },
        ),
        migrations.CreateModel(
            name="Historico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("he_ganado", models.BooleanField()),
                ("preguntas_respondidas", models.IntegerField(verbose_name=0)),
                ("quesitos", models.IntegerField(verbose_name=0)),
                (
                    "equipo",
                    models.CharField(
                        choices=[
                            ("E1", "Equipo1"),
                            ("E2", "Equipo2"),
                            ("E3", "Equipo3"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "id_partida",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_id_partida",
                        to="trivial_api.partida",
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_username",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Historico",
            },
        ),
        migrations.CreateModel(
            name="Estadisticas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("geografia_bien", models.IntegerField(default=0)),
                ("geografia_mal", models.IntegerField(default=0)),
                ("arte_y_literatura_bien", models.IntegerField(default=0)),
                ("arte_y_literatura_mal", models.IntegerField(default=0)),
                ("historia_bien", models.IntegerField(default=0)),
                ("historia_mal", models.IntegerField(default=0)),
                ("entretenimiento_bien", models.IntegerField(default=0)),
                ("entretenimiento_mal", models.IntegerField(default=0)),
                ("ciencias_bien", models.IntegerField(default=0)),
                ("ciencias_mal", models.IntegerField(default=0)),
                ("deportes_bien", models.IntegerField(default=0)),
                ("deportes_mal", models.IntegerField(default=0)),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estadisticas_username",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Estadisticas",
            },
        ),
        migrations.CreateModel(
            name="Amigos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amigo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amigos_amigo",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amigos_username",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Amigos",
            },
        ),
        migrations.CreateModel(
            name="Adquirido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("adquirido", models.BooleanField()),
                (
                    "id_objeto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adquirido_id_objeto",
                        to="trivial_api.fichas_tableros",
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adquirido_username",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Adquirido",
            },
        ),
        migrations.AddConstraint(
            model_name="sala",
            constraint=models.UniqueConstraint(
                fields=("nombre_sala", "username"), name="sala_pk"
            ),
        ),
        migrations.AddConstraint(
            model_name="historico",
            constraint=models.UniqueConstraint(
                fields=("id_partida", "username"), name="historico_pk"
            ),
        ),
        migrations.AddConstraint(
            model_name="amigos",
            constraint=models.UniqueConstraint(
                fields=("username", "amigo"), name="amigos_pk"
            ),
        ),
        migrations.AddConstraint(
            model_name="adquirido",
            constraint=models.UniqueConstraint(
                fields=("username", "id_objeto"), name="adquirido_pk"
            ),
        ),
    ]
